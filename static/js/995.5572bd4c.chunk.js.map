{"version":3,"file":"static/js/995.5572bd4c.chunk.js","mappings":"mTAEMA,EAAU,mCAEVC,E,MAAWC,GAAAA,OAAa,CAC5BC,QAAS,iCAGLC,EACM,uBADNA,EAES,gBAFTA,EAGU,SAHVA,EAIU,WAJVA,EAKU,WAGHC,EAAgB,mCAAG,yGAAOC,EAAP,+BAAc,EAAd,SACPL,EAASM,IAAT,UAClBH,EADkB,oBACaJ,EADb,iBAC6BM,EAD7B,wCADO,cACxBE,EADwB,yBAIvBA,EAASC,KAAKC,SAJS,2CAAH,qDAOhBC,EAAc,mCAAG,WAAMC,GAAN,uFACLX,EAASM,IAAT,UAClBH,EADkB,YACSQ,EADT,oBACuBZ,EADvB,oBADK,cACtBQ,EADsB,yBAIrBA,EAASC,MAJY,2CAAH,sDAOdI,EAAe,mCAAG,WAAOC,GAAP,4FAAcR,EAAd,+BAAqB,EAArB,SACNL,EAASM,IAAT,UAClBH,EADkB,oBACgBJ,EADhB,iBACgCM,EADhC,kBAC8CQ,EAD9C,wCADM,cACvBN,EADuB,yBAKtBA,EAASC,KAAKC,SALQ,2CAAH,sDAQfK,EAAU,mCAAG,WAAOH,GAAP,4FAAWN,EAAX,+BAAkB,EAAlB,SACDL,EAASM,IAAT,iBACXK,GADW,OACNR,EADM,oBAC6BJ,EAD7B,gCAC4DM,IAF3D,cAClBE,EADkB,yBAKjBA,EAASC,KAAKC,SALG,2CAAH,sDAQVM,EAAU,mCAAG,WAAMJ,GAAN,uFACDX,EAASM,IAAT,iBACXK,GADW,OACNR,EADM,oBAC6BJ,EAD7B,oBADC,cAClBQ,EADkB,yBAKjBA,EAASC,KAAKQ,MALG,2CAAH,qD,4ICwCvB,UA7EoB,WAClB,OAA0BC,EAAAA,EAAAA,UAAS,CACjCC,QAAS,GACTC,SAAS,EACTC,MAAO,OAHT,eAAOC,EAAP,KAAcC,EAAd,KAMQX,GAAOY,EAAAA,EAAAA,MAAPZ,IAERa,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,oGAEjBH,GAAS,SAAAI,GAAS,yBACbA,GADa,IAEhBP,SAAS,EACTC,MAAO,MAHS,IAFD,UAQIL,EAAAA,EAAAA,IAAWJ,GARf,OAQXgB,EARW,OAUjBL,GAAS,SAAAI,GACP,OAAO,kBACFA,GADL,IAEER,QAASS,GAEZ,IAfgB,gDAiBjBL,GAAS,SAAAI,GAAS,yBACbA,GADa,IAEhBN,MAAK,MAFW,IAjBD,yBAsBjBE,GAAS,SAAAI,GACP,OAAO,kBACFA,GADL,IAEEP,SAAS,GAEZ,IA3BgB,4EAAH,qDA+BlBM,GACD,GAAE,CAACd,IAIJ,IAAQQ,EAAmBE,EAAnBF,QAASC,EAAUC,EAAVD,MAGXQ,EAFcP,EAAZH,QAEiBW,KAAI,gBAAGlB,EAAH,EAAGA,GAAImB,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAWC,EAAxB,EAAwBA,aAAxB,OAC3B,gBAAaC,UAAWC,EAAAA,EAAAA,SAAxB,WACE,gBACEC,IAAKH,EAAY,UAtDT,oCAsDS,OAAgBA,GAAiBI,EAClDC,IAAG,UAAKP,EAAL,aACHQ,MAAM,SAER,4BACE,wBACE,uBAAIR,OAGN,wBACE,uBAAIC,WAZDpB,EADkB,IAmB7B,OACE,iBAAKsB,UAAWC,EAAAA,EAAAA,UAAhB,WACE,eAAID,UAAWC,EAAAA,EAAAA,SAAf,SAA8BN,IAC7BT,IAAW,2KACXC,IAAS,4IAGf,C","sources":["modules/api.js","pages/CreditsPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '5f30c40f35f127b63ef357633391869a';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n});\n\nconst END_POINTS = {\n  trending: '/trending/movie/week',\n  querySearch: '/search/movie',\n  movieDetails: '/movie',\n  movieCredits: '/credits',\n  movieReviews: '/reviews',\n};\n\nexport const getMovieTrending = async (page = 1) => {\n  const response = await instance.get(\n    `${END_POINTS.trending}?api_key=${API_KEY}&page=${page}&language=uk-UA&include_adult=false`\n  );\n  return response.data.results;\n};\n\nexport const getSingleMovie = async id => {\n  const response = await instance.get(\n    `${END_POINTS.movieDetails}/${id}?api_key=${API_KEY}&language=uk-UA`\n  );\n  return response.data;\n};\n\nexport const getSearchMovies = async (query, page = 1) => {\n  const response = await instance.get(\n    `${END_POINTS.querySearch}?api_key=${API_KEY}&page=${page}&query=${query}&language=uk-UA&include_adult=false`\n  );\n\n  return response.data.results;\n};\n\nexport const getReviews = async (id, page = 1) => {\n  const response = await instance.get(\n    `/movie/${id}${END_POINTS.movieReviews}?api_key=${API_KEY}&language=en-US&page=${page}`\n  );\n\n  return response.data.results;\n};\n\nexport const getCredits = async id => {\n  const response = await instance.get(\n    `/movie/${id}${END_POINTS.movieCredits}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data.cast;\n};\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCredits } from 'modules/api';\nimport noImg from '../images/no-photo.jpg';\n\nimport css from '../modules/Menu.module.css';\n\nconst IMG_URL = 'https://image.tmdb.org/t/p/w500/';\n\nconst CreditsPage = () => {\n  const [state, setState] = useState({\n    credits: [],\n    loading: false,\n    error: null,\n  });\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchCredits = async () => {\n      try {\n        setState(prevState => ({\n          ...prevState,\n          loading: true,\n          error: null,\n        }));\n\n        const result = await getCredits(id);\n\n        setState(prevState => {\n          return {\n            ...prevState,\n            credits: result,\n          };\n        });\n      } catch (error) {\n        setState(prevState => ({\n          ...prevState,\n          error,\n        }));\n      } finally {\n        setState(prevState => {\n          return {\n            ...prevState,\n            loading: false,\n          };\n        });\n      }\n    };\n\n    fetchCredits();\n  }, [id]);\n\n  // const goBack = () => navigate(-1);\n\n  const { loading, error } = state;\n  const { credits } = state;\n\n  const elements = credits.map(({ id, name, character, profile_path }) => (\n    <li key={id} className={css.castItem}>\n      <img\n        src={profile_path ? `${IMG_URL}${profile_path}` : noImg}\n        alt={`${name} portrait`}\n        width=\"100\"\n      />\n      <div>\n        <p>\n          <b>{name}</b>\n        </p>\n\n        <p>\n          <i>{character}</i>\n        </p>\n      </div>\n    </li>\n  ));\n\n  return (\n    <div className={css.container}>\n      <ul className={css.castList}>{elements}</ul>\n      {loading && <p>... завантажується кінофільм</p>}\n      {error && <p>Помилка заванаження!</p>}\n    </div>\n  );\n};\n\nexport default CreditsPage;\n"],"names":["API_KEY","instance","axios","baseURL","END_POINTS","getMovieTrending","page","get","response","data","results","getSingleMovie","id","getSearchMovies","query","getReviews","getCredits","cast","useState","credits","loading","error","state","setState","useParams","useEffect","fetchCredits","prevState","result","elements","map","name","character","profile_path","className","css","src","noImg","alt","width"],"sourceRoot":""}