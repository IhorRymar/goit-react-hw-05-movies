{"version":3,"file":"static/js/906.3d9b76fe.chunk.js","mappings":"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","sources":["modules/api.js","pages/SingleMoviePage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '5f30c40f35f127b63ef357633391869a';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n});\n\nconst END_POINTS = {\n  trending: '/trending/movie/week',\n  querySearch: '/search/movie',\n  movieDetails: '/movie',\n  movieCredits: '/credits',\n  movieReviews: '/reviews',\n};\n\nexport const getMovieTrending = async (page = 1) => {\n  const response = await instance.get(\n    `${END_POINTS.trending}?api_key=${API_KEY}&page=${page}&language=uk-UA&include_adult=false`\n  );\n  return response.data.results;\n};\n\nexport const getSingleMovie = async id => {\n  const response = await instance.get(\n    `${END_POINTS.movieDetails}/${id}?api_key=${API_KEY}&language=uk-UA`\n  );\n  return response.data;\n};\n\nexport const getSearchMovies = async (query, page = 1) => {\n  const response = await instance.get(\n    `${END_POINTS.querySearch}?api_key=${API_KEY}&page=${page}&query=${query}&language=uk-UA&include_adult=false`\n  );\n\n  return response.data.results;\n};\n\nexport const getReviews = async (id, page = 1) => {\n  const response = await instance.get(\n    `/movie/${id}${END_POINTS.movieReviews}?api_key=${API_KEY}&language=en-US&page=${page}`\n  );\n\n  return response.data.results;\n};\n\nexport const getCredits = async id => {\n  const response = await instance.get(\n    `/movie/${id}${END_POINTS.movieCredits}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data.cast;\n};\n","import { useState, useEffect } from 'react';\nimport {\n  NavLink,\n  Outlet,\n  useParams,\n  useNavigate,\n  useLocation,\n} from 'react-router-dom';\nimport { getSingleMovie } from 'modules/api';\nimport { AiOutlineArrowLeft } from 'react-icons/ai';\nimport noImg from '../images/Poster_not_available.jpg';\nimport { getClassName } from '../modules/Menu';\n\nimport css from '../modules/Menu.module.css';\n\nconst IMG_URL = 'https://image.tmdb.org/t/p/w500/';\n\nconst SingleMoviePage = () => {\n  const [state, setState] = useState({\n    item: {},\n    loading: false,\n    error: null,\n  });\n\n  const { id } = useParams();\n  const navigate = useNavigate();\n\n  const location = useLocation();\n  const from = location.state?.from || '/movies';\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      try {\n        setState(prevState => ({\n          ...prevState,\n          loading: true,\n          error: null,\n        }));\n\n        const result = await getSingleMovie(id);\n\n        setState(prevState => {\n          return {\n            ...prevState,\n            item: result,\n          };\n        });\n      } catch (error) {\n        setState(prevState => ({\n          ...prevState,\n          error,\n        }));\n      } finally {\n        setState(prevState => {\n          return {\n            ...prevState,\n            loading: false,\n          };\n        });\n      }\n    };\n\n    fetchMovie();\n  }, [id]);\n\n  const goBack = () => navigate(from);\n\n  const { loading, error } = state;\n  const { title, overview, poster_path, vote_average, release_date } =\n    state.item;\n\n  const getYear = () => new Date(release_date).getFullYear();\n\n  return (\n    <div className={css.container}>\n      <button className={css.singleMoviePageBtn} onClick={goBack}>\n        <AiOutlineArrowLeft /> Назад\n      </button>\n      <div className={css.singleMovieContainer}>\n        <img\n          src={poster_path ? `${IMG_URL}${poster_path}` : noImg}\n          alt={title}\n          width=\"300\"\n        />\n        <h2>\n          {title} ({getYear()})\n        </h2>\n        <p>\n          <b>Опис фільму:</b> {overview}\n        </p>\n        <p>\n          <b>Рейтинг:</b> {vote_average}\n        </p>\n      </div>\n      <div className={css.singleMovieLinks}>\n        <NavLink\n          state={{ from }}\n          className={getClassName}\n          to={`/movies/${id}/credits`}\n        >\n          Актори\n        </NavLink>\n        <NavLink\n          state={{ from }}\n          className={getClassName}\n          to={`/movies/${id}/reviews`}\n        >\n          Відгуки\n        </NavLink>\n      </div>\n      <Outlet />\n      {loading && <p>... завантажується кінофільм</p>}\n      {error && <p>Помилка заванаження!</p>}\n    </div>\n  );\n};\n\nexport default SingleMoviePage;\n"],"names":["API_KEY","instance","axios","baseURL","END_POINTS","getMovieTrending","page","get","response","data","results","getSingleMovie","id","getSearchMovies","query","getReviews","getCredits","cast","useState","item","loading","error","state","setState","useParams","navigate","useNavigate","from","useLocation","useEffect","fetchMovie","prevState","result","title","overview","poster_path","vote_average","release_date","className","css","onClick","src","noImg","alt","width","Date","getFullYear","getClassName","to"],"sourceRoot":""}